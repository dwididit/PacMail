name: Deploy Staging ðŸš€

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}

      - name: Create .env file for backend
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" > .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env

      - name: Create .env file for frontend
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env

      - name: Run deployment script on staging server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          script: |
            set -e
            APP_STG_PATH="${{ vars.APP_STG_PATH }}"
            if [ -d "$APP_STG_PATH" ]; then
              cd $APP_STG_PATH
              sudo docker-compose down --remove-orphans --timeout 60 || true
              git pull origin master
            else
              mkdir -p $APP_STG_PATH
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              git clone ${{ secrets.GIT_URL }} $APP_STG_PATH
              cd $APP_STG_PATH
            fi
            touch .env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env
            sudo docker-compose --env-file .env up --build --detach

      - name: Wait for services to be ready
        run: sleep 30

      - name: Fetch Docker Logs for Backend
        run: sudo docker logs backend

      - name: Fetch Docker Logs for Frontend
        run: sudo docker logs frontend

      - name: Test Hit Endpoint
        run: |
          curl -f https://${{ secrets.STG_URL }} || (
            echo "Fetching docker logs for backend and frontend..."
            sudo docker logs backend
            sudo docker logs frontend
            exit 1
          )
