name: Staging Deployment

on:
  push:
    branches:
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Create .env file for backend
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" > ./backend/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> ./backend/.env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> ./backend/.env

      - name: Create .env file for frontend
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" > ./frontend/.env

      - name: Install Node.js dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build React application
        run: |
          CI=false npm run build
        working-directory: ./frontend

      - name: Build and Run application
        run: |
          cat ./backend/.env
          cat ./frontend/.env
          sudo docker-compose --env-file ./backend/.env up --build --detach

      - name: Wait for services to be ready
        run: |
          sleep 30
          docker ps -a

      - name: Test Hit Endpoint
        run: |
          curl ${{ secrets.STG_URL }} || (
            echo "Fetching docker logs for backend and frontend..."
            sudo docker logs backend
            sudo docker logs frontend
            exit 1
          )
