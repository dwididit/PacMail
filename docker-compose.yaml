version: '3.8'

services:
  frontend:
    image: node:latest
    container_name: frontend
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend
    command: npm start
    restart: always
    depends_on:
      - backend
      - database
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    network_mode: "host"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    hostname: backend
    volumes:
      - ./backend:/app
    restart: always
    depends_on:
      - database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: database
    network_mode: "host"

  database:
    image: postgres:13
    container_name: database
    hostname: database
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    network_mode: "host"

volumes:
  postgres_data:
